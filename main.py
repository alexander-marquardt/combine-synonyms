import os

"""
This Python script combines multiple synonym files from a specified directory into a single output file. 

What it does:
1. Reads all `.txt` files in a given directory that contain synonym sets. Each line in these files is a comma-separated list of synonyms.
2. It ensures that synonym sets with overlapping terms (e.g., "car, automobile" and "automobile, vehicle") are merged into a single line.
3. The program removes duplicate entries and reorders the terms alphabetically within each line for clarity.
4. It writes the combined, deduplicated synonym sets into a new output file with an introductory header.

Why this is useful:
- In large search systems like Elasticsearch, synonym files help expand search queries to cover multiple terms that mean the same thing.
- This script simplifies the process of managing and updating synonym files by automatically merging related terms and removing duplicates.
- By combining multiple synonym files and handling overlaps, the script ensures efficient and clean synonym management for search systems.

Usage:
- Place all your synonym files (with `.txt` extension) in a directory.
- The script will scan all the files, merge overlapping synonyms, and output the combined synonyms into a new file.
"""


def parse_synonym_line(line):
    """
    Parse a synonym line into a set of terms.
    This ensures we can compare synonym lines regardless of term order.
    """
    return set(term.strip() for term in line.split(","))


def merge_synonym_sets(existing_synonyms, new_synonym_set):
    """
    Merges any existing synonym sets that have overlap with the new synonym set.
    """
    to_merge = []

    # Find all synonym sets that overlap with the new set
    for synonym_set in existing_synonyms:
        if not synonym_set.isdisjoint(new_synonym_set):
            to_merge.append(synonym_set)

    # Merge all overlapping sets into a single set
    for synonym_set in to_merge:
        existing_synonyms.remove(synonym_set)
        new_synonym_set.update(synonym_set)

    # Add the newly merged set to the collection
    existing_synonyms.append(new_synonym_set)


def combine_synonym_files_in_directory(directory):
    """
    Combine all synonym files in the specified directory into one, removing duplicates and appending new synonyms.

    :param directory: Directory containing synonym files.
    :return: A list of combined synonym lines.
    """
    combined_synonyms = []

    # Scan directory for all .txt files
    for filename in os.listdir(directory):
        if filename.endswith(".txt"):
            file_path = os.path.join(directory, filename)
            print(f"Processing file: {file_path}")

            with open(file_path, 'r') as f:
                for line in f:
                    line = line.strip()
                    if not line or line.startswith("#"):
                        # Ignore empty lines and comments
                        continue

                    new_synonym_set = parse_synonym_line(line)
                    merge_synonym_sets(combined_synonyms, new_synonym_set)

    # Convert sets back into sorted comma-separated lines
    return [", ".join(sorted(synonym_set)) for synonym_set in combined_synonyms]


def write_combined_synonyms(output_file, combined_synonyms):
    """
    Write the combined synonym list to a new file with an introductory header.

    :param output_file: Output file path.
    :param combined_synonyms: List of combined synonym lines.
    """
    with open(output_file, 'w') as f:
        # Write the introductory header
        f.write("# This file contains combined synonym sets generated by merging multiple synonym files.\n")
        f.write(
            "# Synonym sets with overlapping terms are merged into a single set, and duplicate entries are removed.\n")
        f.write(
            "# Each line contains synonyms, separated by commas, which can be used in Elasticsearch or other search systems.\n")
        f.write("# The lines are automatically deduplicated and sorted for clarity and performance.\n")
        f.write("# Example:\n")
        f.write("# car, automobile, vehicle, auto\n\n")

        # Write the combined synonym lines
        for line in sorted(combined_synonyms):
            f.write(line + '\n')


def main(directory, output_file):
    """
    Main function to combine all synonym files in a directory and save the output with a header.

    :param directory: Directory containing synonym files.
    :param output_file: The output file path where the combined synonyms will be saved.
    """
    combined_synonyms = combine_synonym_files_in_directory(directory)
    write_combined_synonyms(output_file, combined_synonyms)
    print(f"Combined synonyms written to {output_file}")


if __name__ == "__main__":
    # Example usage:
    directory = 'synonym_files'  # Replace with the directory containing your synonym files
    output_file = 'combined_synonyms.txt'

    main(directory, output_file)
